var documenterSearchIndex = {"docs":
[{"location":"cryptoforexcommodities/#available_crytocurrencies","page":"Crypto & Forex & Commodities","title":"available_crytocurrencies","text":"","category":"section"},{"location":"cryptoforexcommodities/","page":"Crypto & Forex & Commodities","title":"Crypto & Forex & Commodities","text":"available_crytocurrencies","category":"page"},{"location":"cryptoforexcommodities/#FinancialModelingPrep.available_crytocurrencies","page":"Crypto & Forex & Commodities","title":"FinancialModelingPrep.available_crytocurrencies","text":"available_crytocurrencies(fmp)\n\nReturns a vector of all available cryptocurrencies in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Cryptocurrencies-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available cryptocurrencies\ndata = available_crytocurrencies(fmp)\n\n\n\n\n\n","category":"function"},{"location":"cryptoforexcommodities/#available_forex_pairs","page":"Crypto & Forex & Commodities","title":"available_forex_pairs","text":"","category":"section"},{"location":"cryptoforexcommodities/","page":"Crypto & Forex & Commodities","title":"Crypto & Forex & Commodities","text":"available_forex_pairs","category":"page"},{"location":"cryptoforexcommodities/#FinancialModelingPrep.available_forex_pairs","page":"Crypto & Forex & Commodities","title":"FinancialModelingPrep.available_forex_pairs","text":"available_forex_pairs(fmp)\n\nReturns a vector of all available forex pairs in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Forex-Pairs-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available forex pairs\ndata = available_forex_pairs(fmp)\n\n\n\n\n\n","category":"function"},{"location":"cryptoforexcommodities/#exchange_rates","page":"Crypto & Forex & Commodities","title":"exchange_rates","text":"","category":"section"},{"location":"cryptoforexcommodities/","page":"Crypto & Forex & Commodities","title":"Crypto & Forex & Commodities","text":"exchange_rates","category":"page"},{"location":"cryptoforexcommodities/#FinancialModelingPrep.exchange_rates","page":"Crypto & Forex & Commodities","title":"FinancialModelingPrep.exchange_rates","text":"exchange_rates(fmp)\nexchange_rates(fmp, symbol)\n\nReturns the commodity quote for the specified symbol(s). Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A commodity symbol.\n\nSee Crypto-Quote for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all fx rates\ndata = commodity_quote(fmp)\n\n# get the fx rates for EURUSD\ndata = commodity_quote(fmp, \"EURUSD\")\n\n\n\n\n\n","category":"function"},{"location":"cryptoforexcommodities/#available_commodities","page":"Crypto & Forex & Commodities","title":"available_commodities","text":"","category":"section"},{"location":"cryptoforexcommodities/","page":"Crypto & Forex & Commodities","title":"Crypto & Forex & Commodities","text":"available_commodities","category":"page"},{"location":"cryptoforexcommodities/#FinancialModelingPrep.available_commodities","page":"Crypto & Forex & Commodities","title":"FinancialModelingPrep.available_commodities","text":"available_commodities(fmp)\n\nReturns a vector of all available commodities in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Commodities-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available commodities\ndata = available_commodities(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#symbols_with_financials","page":"Stock Fundamentals","title":"symbols_with_financials","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"symbols_with_financials","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.symbols_with_financials","page":"Stock Fundamentals","title":"FinancialModelingPrep.symbols_with_financials","text":"symbols_with_financials(fmp)\n\nReturns a vector of symbols which have financial statements. Each element is a string.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Financial-Statements-List for more details.  \n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#income_statements","page":"Stock Fundamentals","title":"income_statements","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"income_statements","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.income_statements","page":"Stock Fundamentals","title":"FinancialModelingPrep.income_statements","text":"income_statements(fmp, symbol, reported = false, params...)\n\nReturns a vector of income statements for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nreported::Bool: Return the reported or normalized statements.\nparams...: Additional keyword query params.\n\nSee Income-Statements for more details.   See Income-Statements-As-Reported for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 10 quarterly statments for AAPL\ndata = income_statements(fmp, \"AAPL\", period = \"quarter\", limit = 10)\n\n# get the last 5 annual statements as reported for AAPL\ndata = income_statements(fmp, \"AAPL\", reported = true, limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#balance_sheet_statements","page":"Stock Fundamentals","title":"balance_sheet_statements","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"balance_sheet_statements","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.balance_sheet_statements","page":"Stock Fundamentals","title":"FinancialModelingPrep.balance_sheet_statements","text":"balance_sheet_statements(fmp, symbol, reported = false, params...)\n\nReturns a vector of balance sheet statements for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nreported::Bool: Return the reported or normalized statements.\nparams...: Additional keyword query params.\n\nSee Balance-Sheet-Statements for more details.   See Balance-Sheet-Statements-As-Reported for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 10 quarterly statments for AAPL\ndata = balance_sheet_statements(fmp, \"AAPL\", period = \"quarter\", limit = 10)\n\n# get the last 5 annual statements as reported for AAPL\ndata = balance_sheet_statements(fmp, \"AAPL\", reported = true, limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#cash_flow_statements","page":"Stock Fundamentals","title":"cash_flow_statements","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"cash_flow_statements","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.cash_flow_statements","page":"Stock Fundamentals","title":"FinancialModelingPrep.cash_flow_statements","text":"cash_flow_statements(fmp, symbol, reported = false, params...)\n\nReturns a vector of cash flow statements for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nreported::Bool: Return the reported or normalized statements.\nparams...: Additional keyword query params.\n\nSee Cash-Flow-Statements for more details.   See Cash-Flow-Statements-As-Reported for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 10 quarterly statments for AAPL\ndata = cash_flow_statements(fmp, \"AAPL\", period = \"quarter\", limit = 10)\n\n# get the last 5 annual statements as reported for AAPL\ndata = cash_flow_statements(fmp, \"AAPL\", reported = true, limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#financial_statements","page":"Stock Fundamentals","title":"financial_statements","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"financial_statements","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.financial_statements","page":"Stock Fundamentals","title":"FinancialModelingPrep.financial_statements","text":"financial_statements(fmp, symbol, params...)\n\nReturns a vector of financial statements as reported for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Full-Financial-Statements-As-Reported for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all quarterly statements as reported for AAPL\ndata = financial_statements(fmp, \"AAPL\", period = \"quarter\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#financial_reports","page":"Stock Fundamentals","title":"financial_reports","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"financial_reports","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.financial_reports","page":"Stock Fundamentals","title":"FinancialModelingPrep.financial_reports","text":"financial_reports(fmp, symbol, year, period = \"FY\")\n\nReturns a vector with the financial report for the specified symbol, year and period. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nyear::Integer: A calendar year.\nperiod::String: One of \"FY\", \"Q1\", \"Q2\", \"Q3\" or \"Q4\".\n\nSee Annual-Reports-on-Form-10-K for more details. See Quarterly-Earnings-Reports for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the 10-K for AAPL in 2022\ndata = financial_reports(fmp, \"AAPL\", year = 2022)\n\n# get the 10-Q for AAPL in Q4 of 2022\ndata = financial_reports(fmp, \"AAPL\", year = 2022, period = \"Q4\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#revenue_segments","page":"Stock Fundamentals","title":"revenue_segments","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"revenue_segments","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.revenue_segments","page":"Stock Fundamentals","title":"FinancialModelingPrep.revenue_segments","text":"revenue_segments(fmp, symbol, segment = REVENUE_SEGMENTS.product, params...)\n\nReturns a dictionary with the revenue segments for the specified symbol.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nsegment::String: A REVENUE_SEGMENTS option.\nparams...: Additional keyword query params.\n\nSee Sales-Revenue-By-Segments for more details. See Revenue-Geographic-by-Segments for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all yearly geographic revenue segments for AAPL\ndata = revenue_segments(fmp, \"AAPL\", segment = REVENUE_SEGMENTS.geographic)\n\n# get all quarterly product revenue segments for AAPL\ndata = revenue_segments(fmp, \"AAPL\", segment = REVENUE_SEGMENTS.product, period = \"quarter\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#shares_float","page":"Stock Fundamentals","title":"shares_float","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"shares_float","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.shares_float","page":"Stock Fundamentals","title":"FinancialModelingPrep.shares_float","text":"shares_float(fmp, symbol = \"all\")\n\nReturns a vector of shares float statistics for one or all symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol or all symbols if not provided.\n\nSee Shares-Float for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get shares float for all symbols\ndata = shares_float(fmp)\n\n# get shares float for AAPL\ndata = shares_float(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#earnings_call_transcripts","page":"Stock Fundamentals","title":"earnings_call_transcripts","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"earnings_call_transcripts","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.earnings_call_transcripts","page":"Stock Fundamentals","title":"FinancialModelingPrep.earnings_call_transcripts","text":"earnings_call_transcript(fmp, symbol)\n\nReturns a vector of earnings call transcripts for a specified symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol or \"all\" if not provided.\nparams...: Additional keyword query params.\n\nSee Earnings-Call-Transcript for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all transcripts for AAPL in Q3 of 2022\ndata = earnings_call_transcript(fmp, \"AAPL\", year = 2022, quarter = 3)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#sec_filings","page":"Stock Fundamentals","title":"sec_filings","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"sec_filings","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.sec_filings","page":"Stock Fundamentals","title":"FinancialModelingPrep.sec_filings","text":"sec_filings(fmp, symbol)\n\nReturns a vector of sec filings for a specified symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol or \"all\" if not provided.\nparams...: Additional keyword query params.\n\nSee SEC-Filings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all 10-K filings for AAPL on page 2\ndata = sec_filings(fmp, \"AAPL\", type = \"10-K\", page = 2)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentals/#company_notes","page":"Stock Fundamentals","title":"company_notes","text":"","category":"section"},{"location":"stockfundamentals/","page":"Stock Fundamentals","title":"Stock Fundamentals","text":"company_notes","category":"page"},{"location":"stockfundamentals/#FinancialModelingPrep.company_notes","page":"Stock Fundamentals","title":"FinancialModelingPrep.company_notes","text":"company_notes(fmp, symbol)\n\nReturns a vector of notes due for a specified symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Company-Notes-Due for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all notes due for AAPL\ndata = company_notes(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockprice/#otc_quote","page":"Stock Price","title":"otc_quote","text":"","category":"section"},{"location":"stockprice/","page":"Stock Price","title":"Stock Price","text":"otc_quote","category":"page"},{"location":"stockprice/#FinancialModelingPrep.otc_quote","page":"Stock Price","title":"FinancialModelingPrep.otc_quote","text":"otc_quote(fmp, symbol)\n\nReturns the price quote for the specified symbol(s). Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee OTC-Quote for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the otc quote for GBTC\ndata = otc_quote(fmp, \"GBTC\")\n\n\n\n\n\n","category":"function"},{"location":"stockprice/#price_change","page":"Stock Price","title":"price_change","text":"","category":"section"},{"location":"stockprice/","page":"Stock Price","title":"Stock Price","text":"price_change","category":"page"},{"location":"stockprice/#FinancialModelingPrep.price_change","page":"Stock Price","title":"FinancialModelingPrep.price_change","text":"price_change(fmp, symbol)\n\nReturns the price change for the specified symbol(s). Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Price-Change for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price change for AAPL\ndata = price_change(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockprice/#historical_splits","page":"Stock Price","title":"historical_splits","text":"","category":"section"},{"location":"stockprice/","page":"Stock Price","title":"Stock Price","text":"historical_splits","category":"page"},{"location":"stockprice/#FinancialModelingPrep.historical_splits","page":"Stock Price","title":"FinancialModelingPrep.historical_splits","text":"historical_splits(fmp, symbol)\n\nReturns the historical stock splits for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Historical-Stock-Splits for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the historical splits for AAPL\ndata = historical_splits(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockprice/#survivorship_bias","page":"Stock Price","title":"survivorship_bias","text":"","category":"section"},{"location":"stockprice/","page":"Stock Price","title":"Stock Price","text":"survivorship_bias","category":"page"},{"location":"stockprice/#FinancialModelingPrep.survivorship_bias","page":"Stock Price","title":"FinancialModelingPrep.survivorship_bias","text":"survivorship_bias(fmp, symbol, date)\n\nReturns the survivorship bias for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\ndate::String: A yyyy-mm-dd formatted date string.\n\nSee Survivorship-Bias for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the survivorship bias for AAPL to Jan 3, 2012\ndata = survivorship_bias(fmp, \"AAPL\", \"2012-01-03\")\n\n\n\n\n\n","category":"function"},{"location":"stockprice/#technical_indicators","page":"Stock Price","title":"technical_indicators","text":"","category":"section"},{"location":"stockprice/","page":"Stock Price","title":"Stock Price","text":"technical_indicators","category":"page"},{"location":"stockprice/#FinancialModelingPrep.technical_indicators","page":"Stock Price","title":"FinancialModelingPrep.technical_indicators","text":"technical_indicators(fmp, symbol, frequency = TIME_FREQUENCIES.daily, period = 200, type = \"SMA\")\n\nReturns the historical price quote for the specified symbol and frequency. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nfrequency::String: A time frequency.\nperiod::Integer: The indicator period.\ntype::String: The indicator type.\n\nSee Daily-Indicators for more details. See Intraday-Indicators for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the daily 50 period SMA for AAPL\ndata = technical_indicators(fmp, \"AAPL\", period = 50)\n\n# get the 15m 10 period WMA for AAPL\ndata = technical_indicators(fmp, \"AAPL\", TIME_FREQUENCIES.minutes15, period = 10, type = \"WMA\")\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#insider_trading_types","page":"Insider Trading","title":"insider_trading_types","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"insider_trading_types","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.insider_trading_types","page":"Insider Trading","title":"FinancialModelingPrep.insider_trading_types","text":"insider_trading_types(fmp)\n\nReturns a vector of insider trading transaction types. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Insider-Trading for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the types of insider trading events\ndata = insider_trading_types(fmp)\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#insider_trades","page":"Insider Trading","title":"insider_trades","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"insider_trades","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.insider_trades","page":"Insider Trading","title":"FinancialModelingPrep.insider_trades","text":"insider_trades(fmp, params...)\n\nReturns a vector of insider trades. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Insider-Trading for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the most recent insider purchases and sales\ndata = insider_trades(fmp, transactionType = [\"P-Purchase\", \"S-Sale\"], page = 0)\n\n# get the most recent insider trades for AAPL\ndata = insider_trades(fmp, symbol = \"AAPL\", page = 0)\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#insider_trades_feed","page":"Insider Trading","title":"insider_trades_feed","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"insider_trades_feed","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.insider_trades_feed","page":"Insider Trading","title":"FinancialModelingPrep.insider_trades_feed","text":"insider_trades_feed(fmp, params...)\n\nReturns a vector of insider trades from the RSS feed. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Insider-Trading-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the most recent insider trades from the feed\ndata = insider_trades_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#cik_list","page":"Insider Trading","title":"cik_list","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"cik_list","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.cik_list","page":"Insider Trading","title":"FinancialModelingPrep.cik_list","text":"cik_list(fmp, params...)\n\nReturns a list of all CIKs matching the specified parameters. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee CIK-Mapper for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all CIKs from page 3\ndata = cik_list(fmp, page = 3)\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#cik_from_name","page":"Insider Trading","title":"cik_from_name","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"cik_from_name","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.cik_from_name","page":"Insider Trading","title":"FinancialModelingPrep.cik_from_name","text":"cik_from_name(fmp, name)\n\nReturns a list of all CIKs matching the specified name. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nname::String: A name.\n\nSee CIK-Mapper for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all CIKs matching the name\ndata = cik_from_name(fmp, \"zuckerberg%20mark\")\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#cik_from_symbol","page":"Insider Trading","title":"cik_from_symbol","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"cik_from_symbol","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.cik_from_symbol","page":"Insider Trading","title":"FinancialModelingPrep.cik_from_symbol","text":"cik_from_symbol(fmp, symbol)\n\nReturns a list of all CIKs matching the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::symbol: A stock symbol.\n\nSee CIK-Mapper for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the CIK for AAPL\ndata = cik_from_symbol(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#insider_roster","page":"Insider Trading","title":"insider_roster","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"insider_roster","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.insider_roster","page":"Insider Trading","title":"FinancialModelingPrep.insider_roster","text":"insider_roster(fmp, symbol)\n\nReturns a list with the insider roster for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::symbol: A stock symbol.\n\nSee Insider-Roster for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the insider roster for AAPL\ndata = insider_roster(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#insider_roster_statistics","page":"Insider Trading","title":"insider_roster_statistics","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"insider_roster_statistics","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.insider_roster_statistics","page":"Insider Trading","title":"FinancialModelingPrep.insider_roster_statistics","text":"insider_roster_statistics(fmp, symbol)\n\nReturns a list of insider roster statistics for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::symbol: A stock symbol.\n\nSee Insider-Roster-Statistics for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the insider roster statistics for AAPL\ndata = insider_roster_statistics(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"insidertrading/#fails_to_deliver","page":"Insider Trading","title":"fails_to_deliver","text":"","category":"section"},{"location":"insidertrading/","page":"Insider Trading","title":"Insider Trading","text":"fails_to_deliver","category":"page"},{"location":"insidertrading/#FinancialModelingPrep.fails_to_deliver","page":"Insider Trading","title":"FinancialModelingPrep.fails_to_deliver","text":"fails_to_deliver(fmp, symbol, params)\n\nReturns a list of fails to deliver for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::symbol: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Fails-to-Deliver for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of fails to deliver for AAPL\ndata = fails_to_deliver(fmp, \"AAPL\", page = 0)\n\n\n\n\n\n","category":"function"},{"location":"tsx/#available_tsx","page":"TSX","title":"available_tsx","text":"","category":"section"},{"location":"tsx/","page":"TSX","title":"TSX","text":"available_tsx","category":"page"},{"location":"tsx/#FinancialModelingPrep.available_tsx","page":"TSX","title":"FinancialModelingPrep.available_tsx","text":"available_tsx(fmp)\n\nReturns a vector of all available tsx symbols in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee TSX-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available tsx symbols\ndata = available_tsx(fmp)\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#sector_pe_ratios","page":"Market Performance","title":"sector_pe_ratios","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"sector_pe_ratios","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.sector_pe_ratios","page":"Market Performance","title":"FinancialModelingPrep.sector_pe_ratios","text":"sector_pe_ratios(fmp, params...)\n\nReturns a list of sector pe ratios. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Sectors-PE-Ratio for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the sector PE ratios of the NYSE on Jan 1, 2023\ndata = sector_pe_ratios(fmp, date = \"2023-01-01\", exchange = \"NYSE\")\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#industry_pe_ratios","page":"Market Performance","title":"industry_pe_ratios","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"industry_pe_ratios","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.industry_pe_ratios","page":"Market Performance","title":"FinancialModelingPrep.industry_pe_ratios","text":"industry_pe_ratios(fmp, params...)\n\nReturns a list of industry pe ratios. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Industries-PE-Ratio for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the industry PE ratios of the NYSE on Jan 1, 2023\ndata = industry_pe_ratios(fmp, date = \"2023-01-01\", exchange = \"NYSE\")\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#sector_performances","page":"Market Performance","title":"sector_performances","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"sector_performances","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.sector_performances","page":"Market Performance","title":"FinancialModelingPrep.sector_performances","text":"sector_performances(fmp)\n\nReturns a list of sector performances. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Sectors-Performance for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the sector performances\ndata = sector_performances(fmp)\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#historical_sector_performances","page":"Market Performance","title":"historical_sector_performances","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"historical_sector_performances","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.historical_sector_performances","page":"Market Performance","title":"FinancialModelingPrep.historical_sector_performances","text":"historical_sector_performances(fmp, params...)\n\nReturns a list of historical sector perfromances. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Sectors-Performance for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the 10 most recent historical sector performances\ndata = historical_sector_performances(fmp, limit = 10)\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#gainers","page":"Market Performance","title":"gainers","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"gainers","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.gainers","page":"Market Performance","title":"FinancialModelingPrep.gainers","text":"gainers(fmp)\n\nReturns a list of the biggest gainers. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Most-Gainer for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the biggest gainers\ndata = gainers(fmp)\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#losers","page":"Market Performance","title":"losers","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"losers","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.losers","page":"Market Performance","title":"FinancialModelingPrep.losers","text":"losers(fmp)\n\nReturns a list of the biggest losers. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Most-Loser for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the biggest losers\ndata = losers(fmp)\n\n\n\n\n\n","category":"function"},{"location":"marketperformance/#most_active","page":"Market Performance","title":"most_active","text":"","category":"section"},{"location":"marketperformance/","page":"Market Performance","title":"Market Performance","text":"most_active","category":"page"},{"location":"marketperformance/#FinancialModelingPrep.most_active","page":"Market Performance","title":"FinancialModelingPrep.most_active","text":"most_active(fmp)\n\nReturns a list of the most active symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Most-Active for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the most active symbols\ndata = most_active(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#financial_ratios","page":"Stock Fundamentals Analysis","title":"financial_ratios","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"financial_ratios","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.financial_ratios","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.financial_ratios","text":"financial_ratios(fmp, symbol, params...)\n\nReturns a vector of common financial ratios for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Financial-Ratios for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get financial ratios for AAPL in the last 30 quarters\ndata = financial_ratios(fmp, \"AAPL\", period = \"quarter\", limit = 30)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#financial_scores","page":"Stock Fundamentals Analysis","title":"financial_scores","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"financial_scores","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.financial_scores","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.financial_scores","text":"financial_scores(fmp, symbol)\n\nReturns a vector of common financial scores for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Financial-Scores for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get financial scores for AAPL\ndata = financial_scores(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#owners_earnings","page":"Stock Fundamentals Analysis","title":"owners_earnings","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"owners_earnings","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.owners_earnings","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.owners_earnings","text":"owners_earnings(fmp, symbol)\n\nReturns a vector of owners earnings for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Owners-Earnings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get ownings earnings for AAPL\ndata = owners_earnings(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#enterprise_values","page":"Stock Fundamentals Analysis","title":"enterprise_values","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"enterprise_values","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.enterprise_values","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.enterprise_values","text":"enterprise_values(fmp, symbol, params...)\n\nReturns a vector of enterprise value components for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Enterprise-Value for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get enterprise values for AAPL in the last 30 quarters\ndata = enterprise_values(fmp, \"AAPL\", period = \"quarter\", limit = 30)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#income_statements_growth","page":"Stock Fundamentals Analysis","title":"income_statements_growth","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"income_statements_growth","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.income_statements_growth","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.income_statements_growth","text":"income_statements_growth(fmp, symbol, params...)\n\nReturns a vector of income statements growth for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Income-Statements-Growth for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 5 annual statements growth for AAPL\ndata = income_statements_growth(fmp, \"AAPL\", limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#balance_sheet_statements_growth","page":"Stock Fundamentals Analysis","title":"balance_sheet_statements_growth","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"balance_sheet_statements_growth","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.balance_sheet_statements_growth","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.balance_sheet_statements_growth","text":"balance_sheet_statements_growth(fmp, symbol, params...)\n\nReturns a vector of balance sheet statements growth for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Balance-Sheet-Statements-Growth for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 5 annual statements growth for AAPL\ndata = balance_sheet_statements_growth(fmp, \"AAPL\", limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#cash_flow_statements_growth","page":"Stock Fundamentals Analysis","title":"cash_flow_statements_growth","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"cash_flow_statements_growth","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.cash_flow_statements_growth","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.cash_flow_statements_growth","text":"cash_flow_statements_growth(fmp, symbol, params...)\n\nReturns a vector of cash flow statements growth for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Cash-Flow-Statements-Growth for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 5 annual statements growth for AAPL\ndata = cash_flow_statements_growth(fmp, \"AAPL\", limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#financial_statements_growth","page":"Stock Fundamentals Analysis","title":"financial_statements_growth","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"financial_statements_growth","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.financial_statements_growth","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.financial_statements_growth","text":"financial_statements_growth(fmp, symbol, params...)\n\nReturns a vector of financial statements growth for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Financial-Statements-Growth for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 5 annual statements growth for AAPL\ndata = financial_statements_growth(fmp, \"AAPL\", limit = 5)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#key_metrics","page":"Stock Fundamentals Analysis","title":"key_metrics","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"key_metrics","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.key_metrics","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.key_metrics","text":"key_metrics(fmp, symbol, period = REPORTING_PERIODS.ttm, params...)\n\nReturns a vector of key metrics for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nperiod::String: A REPORTING_PERIODS option.\nparams...: Additional keyword query params.\n\nSee Key-Metrics for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get key metrics for AAPL in the last 30 years by ttm\ndata = key_metrics(fmp, \"AAPL\", period = REPORTING_PERIODS.ttm, limit = 30)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#company_rating","page":"Stock Fundamentals Analysis","title":"company_rating","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"company_rating","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.company_rating","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.company_rating","text":"company_rating(fmp, symbol)\n\nReturns a vector of ratings for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Company-Rating for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the company rating for AAPL \ndata = company_rating(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#historical_ratings","page":"Stock Fundamentals Analysis","title":"historical_ratings","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"historical_ratings","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.historical_ratings","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.historical_ratings","text":"historical_ratings(fmp, symbol, params...)\n\nReturns a vector of ratings for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Historical-Ratings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 100 ratings for AAPL \ndata = historical_ratings(fmp, \"AAPL\", limit = 100)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#discounted_cash_flows","page":"Stock Fundamentals Analysis","title":"discounted_cash_flows","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"discounted_cash_flows","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.discounted_cash_flows","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.discounted_cash_flows","text":"discounted_cash_flows(fmp, symbol, with_wacc = false)\n\nReturns a vector of discounted cash flows for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nwith_wacc::Bool: Return the version with WACC.\n\nSee Discounted-Cash-Flow for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the latest dcf for AAPL including WACC\ndata = discounted_cash_flows(fmp, \"AAPL\", with_wacc = true)\n\n\n\n\n\n","category":"function"},{"location":"stockfundamentalsanalysis/#historical_discounted_cash_flows","page":"Stock Fundamentals Analysis","title":"historical_discounted_cash_flows","text":"","category":"section"},{"location":"stockfundamentalsanalysis/","page":"Stock Fundamentals Analysis","title":"Stock Fundamentals Analysis","text":"historical_discounted_cash_flows","category":"page"},{"location":"stockfundamentalsanalysis/#FinancialModelingPrep.historical_discounted_cash_flows","page":"Stock Fundamentals Analysis","title":"FinancialModelingPrep.historical_discounted_cash_flows","text":"historical_discounted_cash_flows(fmp, symbol, params...)\n\nReturns a vector of historical discounted cash flows for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Historical-Discounted-Cash-Flow for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the dcf for in the last 30 quarters AAPL\ndata = historical_discounted_cash_flows(fmp, \"AAPL\", period = \"quarter\", limit = 30)\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets","page":"Price Target","title":"price_targets","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets","page":"Price Target","title":"FinancialModelingPrep.price_targets","text":"price_targets(fmp, symbol)\n\nReturns a vector of price targets for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Price-Target for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price targets for AAPL\ndata = price_targets(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets_by_analyst","page":"Price Target","title":"price_targets_by_analyst","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets_by_analyst","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets_by_analyst","page":"Price Target","title":"FinancialModelingPrep.price_targets_by_analyst","text":"price_targets_by_analyst(fmp, name)\n\nReturns a vector of price targets  from the specified name. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nname::String: An analyst name.\n\nSee Price-Target-by-Analyst-Name for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price targets from Tim Anderson\ndata = price_targets_by_analyst(fmp, \"Tim%20Anderson\")\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets_by_company","page":"Price Target","title":"price_targets_by_company","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets_by_company","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets_by_company","page":"Price Target","title":"FinancialModelingPrep.price_targets_by_company","text":"price_targets_by_company(fmp, company)\n\nReturns a vector of price targets from the specified company. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\ncompany::String: An analyst company name.\n\nSee Price-Target-by-Analyst-Company for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price targets from Barclays\ndata = price_targets_by_company(fmp, \"Barclays\")\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets_summary","page":"Price Target","title":"price_targets_summary","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets_summary","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets_summary","page":"Price Target","title":"FinancialModelingPrep.price_targets_summary","text":"price_targets_summary(fmp, symbol)\n\nReturns a vector of the price targets summary for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Price-Target-Summary for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price targets summary for AAPL\ndata = price_targets_summary(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets_consensus","page":"Price Target","title":"price_targets_consensus","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets_consensus","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets_consensus","page":"Price Target","title":"FinancialModelingPrep.price_targets_consensus","text":"price_targets_consensus(fmp, symbol)\n\nReturns a vector of the price targets consensus for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Price-Target-Consensus for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price targets consensus for AAPL\ndata = price_target_consensus(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"pricetarget/#price_targets_feed","page":"Price Target","title":"price_targets_feed","text":"","category":"section"},{"location":"pricetarget/","page":"Price Target","title":"Price Target","text":"price_targets_feed","category":"page"},{"location":"pricetarget/#FinancialModelingPrep.price_targets_feed","page":"Price Target","title":"FinancialModelingPrep.price_targets_feed","text":"price_targets_feed(fmp, params...)\n\nReturns a vector containing the price targets feed results. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Price-Target-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page from the price target feed\ndata = price_targets_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"marketindexes/#available_indexes","page":"Market Indexes","title":"available_indexes","text":"","category":"section"},{"location":"marketindexes/","page":"Market Indexes","title":"Market Indexes","text":"available_indexes","category":"page"},{"location":"marketindexes/#FinancialModelingPrep.available_indexes","page":"Market Indexes","title":"FinancialModelingPrep.available_indexes","text":"available_indexes(fmp)\n\nReturns a vector of all available indexes. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Available-Indexes for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available indexes\ndata = available_indexes(fmp)\n\n\n\n\n\n","category":"function"},{"location":"marketindexes/#sp500_companies","page":"Market Indexes","title":"sp500_companies","text":"","category":"section"},{"location":"marketindexes/","page":"Market Indexes","title":"Market Indexes","text":"sp500_companies","category":"page"},{"location":"marketindexes/#FinancialModelingPrep.sp500_companies","page":"Market Indexes","title":"FinancialModelingPrep.sp500_companies","text":"sp500_companies(fmp, historical = false)\n\nReturns a vector of all S&P 500 companies. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nhistorical::Bool: Return historical or current companies.\n\nSee List-of-S&P-500-Companies for more details. See Historical-S&P-500-Companies for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all historical S&P 500 companies\ndata = sp500_companies(fmp, historical = true)\n\n\n\n\n\n","category":"function"},{"location":"marketindexes/#nasdaq_companies","page":"Market Indexes","title":"nasdaq_companies","text":"","category":"section"},{"location":"marketindexes/","page":"Market Indexes","title":"Market Indexes","text":"nasdaq_companies","category":"page"},{"location":"marketindexes/#FinancialModelingPrep.nasdaq_companies","page":"Market Indexes","title":"FinancialModelingPrep.nasdaq_companies","text":"nasdaq_companies(fmp, historical = false)\n\nReturns a vector of all Nasdaq companies. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nhistorical::Bool: Return historical or current companies.\n\nSee List-of-Nasdaq-100-Companies for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all historical Nasdaq 100 companies\ndata = nasdaq_companies(fmp, historical = true)\n\n\n\n\n\n","category":"function"},{"location":"marketindexes/#dowjones_companies","page":"Market Indexes","title":"dowjones_companies","text":"","category":"section"},{"location":"marketindexes/","page":"Market Indexes","title":"Market Indexes","text":"dowjones_companies","category":"page"},{"location":"marketindexes/#FinancialModelingPrep.dowjones_companies","page":"Market Indexes","title":"FinancialModelingPrep.dowjones_companies","text":"dowjones_companies(fmp, historical = false)\n\nReturns a vector of all Dow Jones companies. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nhistorical::Bool: Return historical or current companies.\n\nSee List-of-Dow-Jones-Companies for more details. See Historical-Dow-Jones-Companies for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all historical Dow Jones companies\ndata = dowjones_companies(fmp, historical = true)\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#earnings_calendar","page":"Stock Calendars","title":"earnings_calendar","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"earnings_calendar","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.earnings_calendar","page":"Stock Calendars","title":"FinancialModelingPrep.earnings_calendar","text":"earnings_calendar(fmp, params...)\nearnings_calendar(fmp, symbol, params...)\n\nReturns a list of earnings calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Earnings-Calendar for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the earnings calendar events for Q1 2022\ndata = earnings_calendar(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n# get the last 50 earnings calendar events for AAPL\ndata = earnings_calendar(fmp, \"AAPL\", limit = 50)\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#earnings_calendar_confirmed","page":"Stock Calendars","title":"earnings_calendar_confirmed","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"earnings_calendar_confirmed","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.earnings_calendar_confirmed","page":"Stock Calendars","title":"FinancialModelingPrep.earnings_calendar_confirmed","text":"earnings_calendar_confirmed(fmp, params...)\n\nReturns a list of the confirmed earnings calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Earnings-Calendar-Confirmed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the confirmed earnings calendar events for Q1 2022\ndata = earnings_calendar_confirmed(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#ipo_calendar","page":"Stock Calendars","title":"ipo_calendar","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"ipo_calendar","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.ipo_calendar","page":"Stock Calendars","title":"FinancialModelingPrep.ipo_calendar","text":"ipo_calendar(fmp, params...)\n\nReturns a list of the ipo calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee IPO-Calendar for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the ipo calendar events for Q1 2022\ndata = ipo_calendar(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#ipo_calendar_prospectus","page":"Stock Calendars","title":"ipo_calendar_prospectus","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"ipo_calendar_prospectus","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.ipo_calendar_prospectus","page":"Stock Calendars","title":"FinancialModelingPrep.ipo_calendar_prospectus","text":"ipo_calendar_prospectus(fmp, params...)\n\nReturns a list of the ipo calendar events with prospectus. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee IPO-Calendar-with-Prospectus for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the ipo calendar events with prospectus for Q1 2022\ndata = ipo_calendar_prospectus(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#ipo_calendar_confirmed","page":"Stock Calendars","title":"ipo_calendar_confirmed","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"ipo_calendar_confirmed","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.ipo_calendar_confirmed","page":"Stock Calendars","title":"FinancialModelingPrep.ipo_calendar_confirmed","text":"ipo_calendar_confirmed(fmp, params...)\n\nReturns a list of the confirmed ipo calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee IPO-Calendar-Confirmed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the confirmed ipo calendar events for Q1 2022\ndata = ipo_calendar_confirmed(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#stock_split_calendar","page":"Stock Calendars","title":"stock_split_calendar","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"stock_split_calendar","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.stock_split_calendar","page":"Stock Calendars","title":"FinancialModelingPrep.stock_split_calendar","text":"stock_split_calendar(fmp, params...)\n\nReturns a list of stock split calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Stock-Split-Calendar for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the stock split calendar events for Q1 2022\ndata = stock_split_calendar(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#dividend_calendar","page":"Stock Calendars","title":"dividend_calendar","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"dividend_calendar","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.dividend_calendar","page":"Stock Calendars","title":"FinancialModelingPrep.dividend_calendar","text":"dividend_calendar(fmp, params...)\n\nReturns a list of dividend calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Dividend-Calendar for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the dividend calendar events for Q1 2022\ndata = dividend_calendar(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#historical_dividends","page":"Stock Calendars","title":"historical_dividends","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"historical_dividends","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.historical_dividends","page":"Stock Calendars","title":"FinancialModelingPrep.historical_dividends","text":"historical_dividends(fmp, symbol)\n\nReturns a list historical dividends for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Historical-Dividends for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last historical dividends for AAPL\ndata = historical_dividends(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockcalendars/#economic_calendar","page":"Stock Calendars","title":"economic_calendar","text":"","category":"section"},{"location":"stockcalendars/","page":"Stock Calendars","title":"Stock Calendars","text":"economic_calendar","category":"page"},{"location":"stockcalendars/#FinancialModelingPrep.economic_calendar","page":"Stock Calendars","title":"FinancialModelingPrep.economic_calendar","text":"economic_calendar(fmp, params...)\n\nReturns a list of economic calendar events. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Economic-Calendar for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the economic calendar events for Q1 2022\ndata = economic_calendar(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"senatetrading/#senate_trades","page":"Senate Trading","title":"senate_trades","text":"","category":"section"},{"location":"senatetrading/","page":"Senate Trading","title":"Senate Trading","text":"senate_trades","category":"page"},{"location":"senatetrading/#FinancialModelingPrep.senate_trades","page":"Senate Trading","title":"FinancialModelingPrep.senate_trades","text":"senate_trades(fmp, symbol)\n\nReturns a vector of senate trades for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Senate-Trading for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get senate trades for AAPL\ndata = senate_trades(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"senatetrading/#senate_trades_feed","page":"Senate Trading","title":"senate_trades_feed","text":"","category":"section"},{"location":"senatetrading/","page":"Senate Trading","title":"Senate Trading","text":"senate_trades_feed","category":"page"},{"location":"senatetrading/#FinancialModelingPrep.senate_trades_feed","page":"Senate Trading","title":"FinancialModelingPrep.senate_trades_feed","text":"senate_trades_feed(fmp, params...)\n\nReturns a vector of senate trades from the RSS feed. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Senate-Trading-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of senate trades from the RSS feed\ndata = senate_trades_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"senatetrading/#senate_disclosures","page":"Senate Trading","title":"senate_disclosures","text":"","category":"section"},{"location":"senatetrading/","page":"Senate Trading","title":"Senate Trading","text":"senate_disclosures","category":"page"},{"location":"senatetrading/#FinancialModelingPrep.senate_disclosures","page":"Senate Trading","title":"FinancialModelingPrep.senate_disclosures","text":"senate_disclosures(fmp, symbol)\n\nReturns a vector of senate disclosures for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Senate-Disclosure for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get senate disclosures for AAPL\ndata = senate_disclosures(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"senatetrading/#senate_disclosure_feed","page":"Senate Trading","title":"senate_disclosure_feed","text":"","category":"section"},{"location":"senatetrading/","page":"Senate Trading","title":"Senate Trading","text":"senate_disclosure_feed","category":"page"},{"location":"senatetrading/#FinancialModelingPrep.senate_disclosure_feed","page":"Senate Trading","title":"FinancialModelingPrep.senate_disclosure_feed","text":"senate_disclosure_feed(fmp, params...)\n\nReturns a vector of senate disclosures from the RSS feed. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Senate-Disclosure-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of senate disclosures from the RSS feed\ndata = senate_disclosure_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stocklist/#available_symbols","page":"Stock List","title":"available_symbols","text":"","category":"section"},{"location":"stocklist/","page":"Stock List","title":"Stock List","text":"available_symbols","category":"page"},{"location":"stocklist/#FinancialModelingPrep.available_symbols","page":"Stock List","title":"FinancialModelingPrep.available_symbols","text":"available_symbols(fmp)\n\nReturns a vector of all available symbols in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Symbols-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available symbols\ndata = available_symbols(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stocklist/#tradeable_symbols","page":"Stock List","title":"tradeable_symbols","text":"","category":"section"},{"location":"stocklist/","page":"Stock List","title":"Stock List","text":"tradeable_symbols","category":"page"},{"location":"stocklist/#FinancialModelingPrep.tradeable_symbols","page":"Stock List","title":"FinancialModelingPrep.tradeable_symbols","text":"tradeable_symbols(fmp)\n\nReturns a vector of all tradeable symbols in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Tradeable-Symbols-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available symbols\ndata = tradeable_symbols(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stocklist/#etf_symbols","page":"Stock List","title":"etf_symbols","text":"","category":"section"},{"location":"stocklist/","page":"Stock List","title":"Stock List","text":"etf_symbols","category":"page"},{"location":"stocklist/#FinancialModelingPrep.etf_symbols","page":"Stock List","title":"FinancialModelingPrep.etf_symbols","text":"etf_symbols(fmp)\n\nReturns a vector of all tradeable symbols in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee ETF-Symbols for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all etf symbols\ndata = etf_symbols(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stockscreener/#search_symbol","page":"Stock Screener","title":"search_symbol","text":"","category":"section"},{"location":"stockscreener/","page":"Stock Screener","title":"Stock Screener","text":"search_symbol","category":"page"},{"location":"stockscreener/#FinancialModelingPrep.search_symbol","page":"Stock Screener","title":"FinancialModelingPrep.search_symbol","text":"search_symbol(fmp, symbol, params...)\n\nReturns a list of search results for the specified symbol and filters. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Symbol-Search for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first 10 matches where symbol is AA and exchange is NASDAQ\ndata = search_symbol(fmp, \"AA\", limit = 10, exchange = \"NASDAQ\")\n\n\n\n\n\n","category":"function"},{"location":"stockscreener/#search_name","page":"Stock Screener","title":"search_name","text":"","category":"section"},{"location":"stockscreener/","page":"Stock Screener","title":"Stock Screener","text":"search_name","category":"page"},{"location":"stockscreener/#FinancialModelingPrep.search_name","page":"Stock Screener","title":"FinancialModelingPrep.search_name","text":"search_name(fmp, name, params...)\n\nReturns a list of search results for the specified name and filters. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nname::String: A company name.\nparams...: Additional keyword query params.\n\nSee Name-Search for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first 10 matches where name is Meta and exchange is NASDAQ\ndata = search_name(fmp, \"Meta\", limit = 10, exchange = \"NASDAQ\")\n\n\n\n\n\n","category":"function"},{"location":"stockscreener/#stock_screener","page":"Stock Screener","title":"stock_screener","text":"","category":"section"},{"location":"stockscreener/","page":"Stock Screener","title":"Stock Screener","text":"stock_screener","category":"page"},{"location":"stockscreener/#FinancialModelingPrep.stock_screener","page":"Stock Screener","title":"FinancialModelingPrep.stock_screener","text":"stock_screener(fmp, params...)\n\nReturns a list of search results for the specified filters. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Stock-Screener for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all tech stocks in the NASDAQ with a market cap over 100mm and a beta above 1\ndata = stock_screener(fmp, marketCapMoreThan = 100000000, betaMoreThan = 1, sector = \"Technology\", exchange = \"NASDAQ\")\n\n# get the first 100 stocks in California with a price greater than 100\ndata = stock_screener(fmp, country = \"CA\", priceMoreThan = 100, limit = 100)\n\n\n\n\n\n","category":"function"},{"location":"client/#FMP","page":"Client","title":"FMP","text":"","category":"section"},{"location":"client/","page":"Client","title":"Client","text":"FMP","category":"page"},{"location":"client/#FinancialModelingPrep.Client.FMP","page":"Client","title":"FinancialModelingPrep.Client.FMP","text":"FMP(apikey, baseurl, headers)\n\nCreates a Financial Modeling Prep instance for interacting with the API server endpoints.\n\nArguments\n\napikey::String = \"demo\"\nbaseurl::String = \"https://financialmodelingprep.com\"\nheaders::Dict{String, String} = Dict(\"Upgrade-Insecure-Requests\" => \"1\")\n\nExamples\n\n# load your FMP API key\nFMP_API_KEY = ENV(\"FMP_API_KEY\")\n\n# create a new FMP instance, passing the API key by name\nfmp = FMP(apikey = FMP_API_KEY)\n\n\n\n\n\n","category":"type"},{"location":"companyinformation/#company_profile","page":"Company Information","title":"company_profile","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"company_profile","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.company_profile","page":"Company Information","title":"FinancialModelingPrep.company_profile","text":"company_profile(fmp, symbol)\n\nReturns the company profile for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Company-Profile for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the company profile for AAPL\ndata = company_profile(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#key_executives","page":"Company Information","title":"key_executives","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"key_executives","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.key_executives","page":"Company Information","title":"FinancialModelingPrep.key_executives","text":"key_executives(fmp, symbol)\n\nReturns the key executives for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Key-Executives for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the key executives for AAPL\ndata = key_executives(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#company_outlook","page":"Company Information","title":"company_outlook","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"company_outlook","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.company_outlook","page":"Company Information","title":"FinancialModelingPrep.company_outlook","text":"company_outlook(fmp, symbol)\n\nReturns the company outlook for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Company-Outlook for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the company outlook for AAPL\ndata = company_outlook(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#stock_peers","page":"Company Information","title":"stock_peers","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"stock_peers","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.stock_peers","page":"Company Information","title":"FinancialModelingPrep.stock_peers","text":"stock_peers(fmp, symbol)\n\nReturns the stock peers for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Stock-Peers for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the stock peers for AAPL\ndata = stock_peers(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#nyse_schedule","page":"Company Information","title":"nyse_schedule","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"nyse_schedule","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.nyse_schedule","page":"Company Information","title":"FinancialModelingPrep.nyse_schedule","text":"nyse_schedule(fmp)\n\nReturns the NYSE schedule including market hours and market holidays.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee NYSE-Schedule for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the NYSE holiday schedule\ndata = nyse_schedule(fmp)[\"stockMarketHolidays\"]\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#delisted_companies","page":"Company Information","title":"delisted_companies","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"delisted_companies","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.delisted_companies","page":"Company Information","title":"FinancialModelingPrep.delisted_companies","text":"delisted_companies(fmp, params...)\n\nReturns delisted companies. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Delisted-Companies for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of delisted companies\ndata = delisted_companies(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#symbol_changes","page":"Company Information","title":"symbol_changes","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"symbol_changes","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.symbol_changes","page":"Company Information","title":"FinancialModelingPrep.symbol_changes","text":"symbol_changes(fmp)\n\nReturns changed symbols. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Symbol-Change for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get symbol changes\ndata = symbol_changes(fmp)\n\n\n\n\n\n","category":"function"},{"location":"companyinformation/#company_information","page":"Company Information","title":"company_information","text":"","category":"section"},{"location":"companyinformation/","page":"Company Information","title":"Company Information","text":"company_information","category":"page"},{"location":"companyinformation/#FinancialModelingPrep.company_information","page":"Company Information","title":"FinancialModelingPrep.company_information","text":"company_information(fmp, symbol)\n\nReturns the company information for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Stock-Peers for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the company information for AAPL\ndata = company_information(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"esgscore/#esg_scores","page":"ESG Score","title":"esg_scores","text":"","category":"section"},{"location":"esgscore/","page":"ESG Score","title":"ESG Score","text":"esg_scores","category":"page"},{"location":"esgscore/#FinancialModelingPrep.esg_scores","page":"ESG Score","title":"FinancialModelingPrep.esg_scores","text":"esg_scores(fmp, symbol)\n\nReturns a vector with the ESG scores for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee ESG-Score for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the esg scores for AAPL\ndata = esg_scores(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"esgscore/#esg_ratings","page":"ESG Score","title":"esg_ratings","text":"","category":"section"},{"location":"esgscore/","page":"ESG Score","title":"ESG Score","text":"esg_ratings","category":"page"},{"location":"esgscore/#FinancialModelingPrep.esg_ratings","page":"ESG Score","title":"FinancialModelingPrep.esg_ratings","text":"esg_ratings(fmp, symbol)\n\nReturns a vector with the ESG ratings for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee ESG-Ratings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the esg ratings for AAPL\ndata = esg_ratings(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"esgscore/#esg_score_benchmarks","page":"ESG Score","title":"esg_score_benchmarks","text":"","category":"section"},{"location":"esgscore/","page":"ESG Score","title":"ESG Score","text":"esg_score_benchmarks","category":"page"},{"location":"esgscore/#FinancialModelingPrep.esg_score_benchmarks","page":"ESG Score","title":"FinancialModelingPrep.esg_score_benchmarks","text":"esg_score_benchmarks(fmp, year)\n\nReturns a vector with the ESG score benchmarks for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nyear::Integer: A calendar year.\n\nSee ESG-Benchmarking for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the esg score benchmarks for 2023\ndata = esg_score_benchmarks(fmp, year = 2023)\n\n\n\n\n\n","category":"function"},{"location":"economics/#market_risk_premiums","page":"Economics","title":"market_risk_premiums","text":"","category":"section"},{"location":"economics/","page":"Economics","title":"Economics","text":"market_risk_premiums","category":"page"},{"location":"economics/#FinancialModelingPrep.market_risk_premiums","page":"Economics","title":"FinancialModelingPrep.market_risk_premiums","text":"market_risk_premiums(fmp)\n\nReturns a vector of market risk premiums for each country. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Market-Risk-Premium for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all market risk premiums\ndata = market_risk_premiums(fmp)\n\n\n\n\n\n","category":"function"},{"location":"economics/#treasury_rates","page":"Economics","title":"treasury_rates","text":"","category":"section"},{"location":"economics/","page":"Economics","title":"Economics","text":"treasury_rates","category":"page"},{"location":"economics/#FinancialModelingPrep.treasury_rates","page":"Economics","title":"FinancialModelingPrep.treasury_rates","text":"treasury_rates(fmp, params...)\n\nReturns a list of the treasury rates for the specified date range. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Treasury-Rates for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the treasury rates for Q1 2022\ndata = treasury_rates(fmp, from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"economics/#economic_indicator","page":"Economics","title":"economic_indicator","text":"","category":"section"},{"location":"economics/","page":"Economics","title":"Economics","text":"economic_indicator","category":"page"},{"location":"economics/#FinancialModelingPrep.economic_indicator","page":"Economics","title":"FinancialModelingPrep.economic_indicator","text":"economic_indicator(fmp, name, params...)\n\nReturns a list of the treasury rates for the specified date range. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nname::String: An econmic indicator.\nparams...: Additional keyword query params.\n\nSee Economic-Indicator for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the real GDP for Q1 2022\ndata = economic_indicator(fmp, name = \"realGDP\", from = \"2022-01-01\", to = \"2022-03-31\")\n\n# get the federal funds rate for Q1 2022\ndata = economic_indicator(fmp, name = \"federalFunds\", from = \"2022-01-01\", to = \"2022-03-31\")\n\n\n\n\n\n","category":"function"},{"location":"upgradesdowngrades/#upgrades_and_downgrades","page":"Upgrades & Downgrades","title":"upgrades_and_downgrades","text":"","category":"section"},{"location":"upgradesdowngrades/","page":"Upgrades & Downgrades","title":"Upgrades & Downgrades","text":"upgrades_and_downgrades","category":"page"},{"location":"upgradesdowngrades/#FinancialModelingPrep.upgrades_and_downgrades","page":"Upgrades & Downgrades","title":"FinancialModelingPrep.upgrades_and_downgrades","text":"upgrades_and_downgrades(fmp, symbol)\n\nReturns a vector of upgrades and downgrades for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Upgrades-&-Downgrades for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the upgrades and downgrades for AAPL\ndata = upgrades_and_downgrades(fmp, AAPL)\n\n\n\n\n\n","category":"function"},{"location":"upgradesdowngrades/#upgrades_and_downgrades_feed","page":"Upgrades & Downgrades","title":"upgrades_and_downgrades_feed","text":"","category":"section"},{"location":"upgradesdowngrades/","page":"Upgrades & Downgrades","title":"Upgrades & Downgrades","text":"upgrades_and_downgrades_feed","category":"page"},{"location":"upgradesdowngrades/#FinancialModelingPrep.upgrades_and_downgrades_feed","page":"Upgrades & Downgrades","title":"FinancialModelingPrep.upgrades_and_downgrades_feed","text":"upgrades_and_downgrades_feed(fmp, params...)\n\nReturns a vector of upgrades and downgrades from the rss feed. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Upgrades-&-Downgrades-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of upgrades and downgrades\ndata = upgrades_and_downgrades_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"upgradesdowngrades/#upgrades_and_downgrades_consensus","page":"Upgrades & Downgrades","title":"upgrades_and_downgrades_consensus","text":"","category":"section"},{"location":"upgradesdowngrades/","page":"Upgrades & Downgrades","title":"Upgrades & Downgrades","text":"upgrades_and_downgrades_consensus","category":"page"},{"location":"upgradesdowngrades/#FinancialModelingPrep.upgrades_and_downgrades_consensus","page":"Upgrades & Downgrades","title":"FinancialModelingPrep.upgrades_and_downgrades_consensus","text":"upgrades_and_downgrades_consensus(fmp, symbol)\n\nReturns a vector of consensus upgrades and downgrades for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Upgrades-&-Downgrades-Consensus for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the consensus of upgrades and downgrades for AAPL\ndata = upgrades_and_downgrades_consensus(fmp, AAPL)\n\n\n\n\n\n","category":"function"},{"location":"upgradesdowngrades/#upgrades_and_downgrades_by_company","page":"Upgrades & Downgrades","title":"upgrades_and_downgrades_by_company","text":"","category":"section"},{"location":"upgradesdowngrades/","page":"Upgrades & Downgrades","title":"Upgrades & Downgrades","text":"upgrades_and_downgrades_by_company","category":"page"},{"location":"upgradesdowngrades/#FinancialModelingPrep.upgrades_and_downgrades_by_company","page":"Upgrades & Downgrades","title":"FinancialModelingPrep.upgrades_and_downgrades_by_company","text":"upgrades_and_downgrades_by_company(fmp, company)\n\nReturns a vector of upgrades and downgrades for the specified company. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Upgrades-&-Downgrades-By-Company for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the consensus of upgrades and downgrades for Barclays\ndata = upgrades_and_downgrades_by_company(fmp, \"Barclays\")\n\n\n\n\n\n","category":"function"},{"location":"pricequotes/#price_quote","page":"Price Quotes","title":"price_quote","text":"","category":"section"},{"location":"pricequotes/","page":"Price Quotes","title":"Price Quotes","text":"price_quote","category":"page"},{"location":"pricequotes/#FinancialModelingPrep.price_quote","page":"Price Quotes","title":"FinancialModelingPrep.price_quote","text":"price_quote(fmp, symbol)\n\nReturns the price quote for the specified symbol(s). Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A financial symbol.\n\nSee Stock-Quote for more details.\nSee Index-Quote for more details.\nSee Euronext-Quote for more details.\nSee TSX-Quote for more details.\nSee Crypto-Quote for more details.\nSee Forex-Quote for more details.\nSee Commodity-Quote for more details.\n\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price quote for AAPL\ndata = price_quote(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"pricequotes/#price_quotes","page":"Price Quotes","title":"price_quotes","text":"","category":"section"},{"location":"pricequotes/","page":"Price Quotes","title":"Price Quotes","text":"price_quotes","category":"page"},{"location":"pricequotes/#FinancialModelingPrep.price_quotes","page":"Price Quotes","title":"FinancialModelingPrep.price_quotes","text":"price_quotes(fmp, market)\n\nReturns the price quotes for the specified marklet. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nmarket::String: A financial market.\n\nSee Stock-Quote for more details.\nSee Index-Quote for more details.\nSee Euronext-Quote for more details.\nSee TSX-Quote for more details.\nSee Crypto-Quote for more details.\nSee Forex-Quote for more details.\nSee Commodity-Quote for more details.\n\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the price quotes for major indexes\ndata = price_quote(fmp, \"index\")\n\n# get the price quotes for NYSE\ndata = price_quote(fmp, \"nyse\")\n\n# get the price quotes for TSX\ndata = price_quote(fmp, \"euronext\")\n\n# get the price quotes for euronext\ndata = price_quote(fmp, \"tsx\")\n\n# get the price quotes for crypto\ndata = price_quote(fmp, \"crypto\")\n\n# get the price quotes for forex\ndata = price_quote(fmp, \"forex\")\n\n# get the price quotes for commodity\ndata = price_quote(fmp, \"commodity\")\n\n\n\n\n\n","category":"function"},{"location":"pricequotes/#historical_price_quote","page":"Price Quotes","title":"historical_price_quote","text":"","category":"section"},{"location":"pricequotes/","page":"Price Quotes","title":"Price Quotes","text":"historical_price_quote","category":"page"},{"location":"pricequotes/#FinancialModelingPrep.historical_price_quote","page":"Price Quotes","title":"FinancialModelingPrep.historical_price_quote","text":"historical_price_quote(fmp, symbol, frequency = TIME_FREQUENCIES.daily, params...)\n\nReturns the historical price quote for the specified symbol and frequency. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nfrequency::String: A time frame.\nparams...: Additional keyword query params.\n\nSee Historical-Stock-Quote for more details.\nSee Historical-Index-Quote for more details.\nSee Historical-Euronext-Quote for more details.\nSee Historical-TSX-Quote for more details.\nSee Historical-Cryptocurrencies-Quote for more details.\nSee Historical-Forex-Quote for more details.\nSee Historical-Commodities-Quote for more details.\n\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the 15m historical price quote for AAPL\ndata = historical_price_quote(fmp, \"AAPL\", frequency = TIME_FREQUENCIES.minutes15)\n\n# get the 4hr historical price quote for BTCUSD\ndata = historical_price_quote(fmp, \"BTCUSD\", frequency = TIME_FREQUENCIES.hours4)\n\n# get the daily historical price quote time series for EURUSD\ndata = historical_price_quote(fmp, \"EURUSD\", frequency = TIME_FREQUENCIES.daily, timeseries = 5)\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#etf_holders","page":"Fund Holdings","title":"etf_holders","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"etf_holders","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.etf_holders","page":"Fund Holdings","title":"FinancialModelingPrep.etf_holders","text":"etf_holders(fmp, symbol)\n\nReturns the etf holders of a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: An etf symbol.\n\nSee ETF-Holders for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the etf holders for SPY\ndata = etf_holders(fmp, \"SPY\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#etf_summary","page":"Fund Holdings","title":"etf_summary","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"etf_summary","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.etf_summary","page":"Fund Holdings","title":"FinancialModelingPrep.etf_summary","text":"etf_summary(fmp, symbol)\n\nReturns the etf summary for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee ETF-Info for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the etf summary for SPY\ndata = etf_summary(fmp, \"SPY\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#institutional_holders","page":"Fund Holdings","title":"institutional_holders","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"institutional_holders","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.institutional_holders","page":"Fund Holdings","title":"FinancialModelingPrep.institutional_holders","text":"institutional_holders(fmp, symbol)\n\nReturns the institutional holders of a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Institutional-Holders for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the institutional holders of AAPL\ndata = institutional_holders(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#mutual_fund_holders","page":"Fund Holdings","title":"mutual_fund_holders","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"mutual_fund_holders","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.mutual_fund_holders","page":"Fund Holdings","title":"FinancialModelingPrep.mutual_fund_holders","text":"mutual_fund_holders(fmp, symbol)\n\nReturns the mutual fund holders of a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Mutual-Fund-Holders for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the mutual fund holders of AAPL\ndata = mutual_fund_holders(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#etf_sector_weightings","page":"Fund Holdings","title":"etf_sector_weightings","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"etf_sector_weightings","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.etf_sector_weightings","page":"Fund Holdings","title":"FinancialModelingPrep.etf_sector_weightings","text":"etf_sector_weightings(fmp, symbol)\n\nReturns the sector weightings of a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: An etf symbol.\n\nSee ETF-Sector-Weightings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the sector weightings of SPY\ndata = etf_sector_weightings(fmp, \"SPY\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#etf_country_weightings","page":"Fund Holdings","title":"etf_country_weightings","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"etf_country_weightings","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.etf_country_weightings","page":"Fund Holdings","title":"FinancialModelingPrep.etf_country_weightings","text":"etf_country_weightings(fmp, symbol)\n\nReturns the country weightings of a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: An etf symbol.\n\nSee ETF-Country-Weightings for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the country weightings of SPY\ndata = etf_country_weightings(fmp, \"SPY\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#etf_exposure","page":"Fund Holdings","title":"etf_exposure","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"etf_exposure","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.etf_exposure","page":"Fund Holdings","title":"FinancialModelingPrep.etf_exposure","text":"etf_exposure(fmp, symbol)\n\nReturns the etf exposure for a specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee ETF-Stock-Exposure for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the etf exposure for AAPL\ndata = etf_exposure(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#institutions_list","page":"Fund Holdings","title":"institutions_list","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"institutions_list","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.institutions_list","page":"Fund Holdings","title":"FinancialModelingPrep.institutions_list","text":"institutions_list(fmp)\n\nReturns a list of all companies by CIK. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Institutions-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all institutions\ndata = institutions_list(fmp)\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#cik_search","page":"Fund Holdings","title":"cik_search","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"cik_search","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.cik_search","page":"Fund Holdings","title":"FinancialModelingPrep.cik_search","text":"cik_search(fmp, name)\n\nReturns a list of all company CIKs matching the specified name. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nname::String: A complete or partial institutional investment manager name.\n\nSee Form-13F-Search for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all CIKs matching \"Berkshire\"\ndata = cik_search(fmp, \"Berkshire\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#company_from_cik","page":"Fund Holdings","title":"company_from_cik","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"company_from_cik","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.company_from_cik","page":"Fund Holdings","title":"FinancialModelingPrep.company_from_cik","text":"company_from_cik(fmp, cik)\n\nReturns a list of all company names matching the specified CIK. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\ncik::String: A CIK.\n\nSee CIK-Mapper for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the company name matching the CIK\ndata = company_from_cik(fmp, \"0001067983\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#forms_13f","page":"Fund Holdings","title":"forms_13f","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"forms_13f","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.forms_13f","page":"Fund Holdings","title":"FinancialModelingPrep.forms_13f","text":"forms_13f(fmp, cik, date)\n\nReturns a list of all form 13F filing matching the specified CIK and date. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\ncik::String: A CIK.\ndate::String: A yyyy-mm-dd formatted date string.\n\nSee Form-13F for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all form 13F form for the CIK on June 30, 2022.\ndata = forms_13f(fmp, \"0001067983\", \"2022-06-30\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#filing_dates","page":"Fund Holdings","title":"filing_dates","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"filing_dates","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.filing_dates","page":"Fund Holdings","title":"FinancialModelingPrep.filing_dates","text":"filing_dates(fmp, cik)\n\nReturns a list of all form 13F filing dates matching the specified CIK. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\ncik::String: A CIK.\n\nSee Form-13F-Filing-Dates for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all form 13F filing dates matching the CIK\ndata = filing_dates(fmp, \"0001067983\")\n\n\n\n\n\n","category":"function"},{"location":"fundholdings/#company_from_cusip","page":"Fund Holdings","title":"company_from_cusip","text":"","category":"section"},{"location":"fundholdings/","page":"Fund Holdings","title":"Fund Holdings","text":"company_from_cusip","category":"page"},{"location":"fundholdings/#FinancialModelingPrep.company_from_cusip","page":"Fund Holdings","title":"FinancialModelingPrep.company_from_cusip","text":"company_from_cusip(fmp, cusip)\n\nReturns a list of all companies matching the specified cusip. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\ncusip::String: A cusip.\n\nSee Cusip-Mapper for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get all companies matching the cusip\ndata = company_from_cusip(fmp, \"000360206\")\n\n\n\n\n\n","category":"function"},{"location":"euronext/#available_euronext","page":"Euronext","title":"available_euronext","text":"","category":"section"},{"location":"euronext/","page":"Euronext","title":"Euronext","text":"available_euronext","category":"page"},{"location":"euronext/#FinancialModelingPrep.available_euronext","page":"Euronext","title":"FinancialModelingPrep.available_euronext","text":"available_euronext(fmp)\n\nReturns a vector of all available euronext symbols in the API. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\n\nSee Euronext-List for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get a list of all available euronext symbols\ndata = available_euronext(fmp)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#fmp_articles","page":"Stock News","title":"fmp_articles","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"fmp_articles","category":"page"},{"location":"stocknews/#FinancialModelingPrep.fmp_articles","page":"Stock News","title":"FinancialModelingPrep.fmp_articles","text":"fmp_articles(fmp, params...)\n\nReturns a list of fmp articles. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee FMP-Articles for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get fmp articles from page 0 and size 5\ndata = fmp_articles(fmp, page = 0, size = 5)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#stock_news","page":"Stock News","title":"stock_news","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"stock_news","category":"page"},{"location":"stocknews/#FinancialModelingPrep.stock_news","page":"Stock News","title":"FinancialModelingPrep.stock_news","text":"stock_news(fmp, params...)\n\nReturns a list of stock news articles. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Stock-News for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the latest 50 stock news for GOOG and MSFT\ndata = stock_news(fmp, ticker = [\"GOOG\", \"MSFT\"], limit = 50)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#stock_news_sentiment_feed","page":"Stock News","title":"stock_news_sentiment_feed","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"stock_news_sentiment_feed","category":"page"},{"location":"stocknews/#FinancialModelingPrep.stock_news_sentiment_feed","page":"Stock News","title":"FinancialModelingPrep.stock_news_sentiment_feed","text":"stock_news_sentiment_feed(fmp, params...)\n\nReturns a list of stock news article sentiment. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Stock-Sentiment for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of stock news article sentiment\ndata = stock_news_sentiment_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#crypto_news","page":"Stock News","title":"crypto_news","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"crypto_news","category":"page"},{"location":"stocknews/#FinancialModelingPrep.crypto_news","page":"Stock News","title":"FinancialModelingPrep.crypto_news","text":"crypto_news(fmp, params...)\n\nReturns a list of crypto news articles. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Crypto-News for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of news for BTCUSD\ndata = crypto_news(fmp, symbol = \"BTCUSD\", page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#forex_news","page":"Stock News","title":"forex_news","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"forex_news","category":"page"},{"location":"stocknews/#FinancialModelingPrep.forex_news","page":"Stock News","title":"FinancialModelingPrep.forex_news","text":"forex_news(fmp, params...)\n\nReturns a list of forex news articles. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Forex-News for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of news for EURUSD\ndata = forex_news(fmp, symbol = \"EURUSD\", page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#general_news","page":"Stock News","title":"general_news","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"general_news","category":"page"},{"location":"stocknews/#FinancialModelingPrep.general_news","page":"Stock News","title":"FinancialModelingPrep.general_news","text":"general_news(fmp, params...)\n\nReturns a list of general news articles. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee General-News for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of general news\ndata = general_news(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stocknews/#press_releases","page":"Stock News","title":"press_releases","text":"","category":"section"},{"location":"stocknews/","page":"Stock News","title":"Stock News","text":"press_releases","category":"page"},{"location":"stocknews/#FinancialModelingPrep.press_releases","page":"Stock News","title":"FinancialModelingPrep.press_releases","text":"press_releases(fmp, symbol, params...)\n\nReturns a list of stock press releases. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Press-Releases for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get first page of press releases from AAPL\ndata = press_releases(fmp, symbol = \"AAPL\", page = 0)\n\n\n\n\n\n","category":"function"},{"location":"","page":"Introduction","title":"Introduction","text":"Financial Modeling Prep API wrapper with Julia.","category":"page"},{"location":"#Disclaimer","page":"Introduction","title":"Disclaimer","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Data is provided by Financial Modeling Prep and requires a paid subscription to access some endpoints.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Only endpoints available with a starter plan have been implemented. Function to endpoint mappings are provided below.","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"pkg> add FinancialModelingPrep","category":"page"},{"location":"#Getting-Started","page":"Introduction","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"using FinancialModelingPrep","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# load your API key\nFMP_API_KEY = ENV[\"FMP_API_KEY\"]\n\n# create a new FMP API instance\nfmp = FMP(apikey = FMP_API_KEY)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# pass API instance to any endpoint method\ndata = income_statements(fmp, \"AAPL\")","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using DataFrames\n\n# load the response data into a data frame\ndf = DataFrame(data)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# sample data frame output \ndf[1:5, 1:4]\n5×4 DataFrame\n Row │ incomeTaxExpense  reportedCurrency  incomeBeforeTaxRatio  depreciationAndAmortization \n     │ Int64             String            Float64               Int64                       \n─────┼───────────────────────────────────────────────────────────────────────────────────────\n   1 │      19300000000  USD                           0.30204                   11104000000\n   2 │      14527000000  USD                           0.298529                  11284000000\n   3 │       9680000000  USD                           0.244398                  11056000000\n   4 │      10481000000  USD                           0.252666                  12547000000\n   5 │      13372000000  USD                           0.274489                  10903000000","category":"page"},{"location":"stockstatistics/#social_sentiment","page":"Stock Statistics","title":"social_sentiment","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"social_sentiment","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.social_sentiment","page":"Stock Statistics","title":"FinancialModelingPrep.social_sentiment","text":"social_sentiment(fmp, symbol, params...)\nsocial_sentiment(fmp, type = \"trending\", params...)\n\nReturns a vector with the social sentiment type for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\ntype::String: One of \"trending\", or \"change\".\nparams...: Additional keyword query params.\n\nSee Social-Sentiment for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of historical social sentiment for AAPL\ndata = social_sentiment(fmp, \"AAPL\", page = 0)\n\n# get all trending social sentiment from stocktwits with a bullish bias\ndata = social_sentiment(fmp, type = \"trending\", type = \"bullish\", source = \"stocktwits\")\n\n\n\n\n\n","category":"function"},{"location":"stockstatistics/#stock_grades","page":"Stock Statistics","title":"stock_grades","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"stock_grades","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.stock_grades","page":"Stock Statistics","title":"FinancialModelingPrep.stock_grades","text":"stock_grades(fmp, symbol, params...)\n\nReturns a vector of stock grades for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Stock-Grade for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 100 stock grades for AAPL\ndata = stock_grades(fmp, \"AAPL\", limit = 100)\n\n\n\n\n\n","category":"function"},{"location":"stockstatistics/#earnings_surprises","page":"Stock Statistics","title":"earnings_surprises","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"earnings_surprises","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.earnings_surprises","page":"Stock Statistics","title":"FinancialModelingPrep.earnings_surprises","text":"earnings_surprises(fmp, symbol)\n\nReturns a vector of earnings suprises for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\n\nSee Earnings-Surprises for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the latest earnings surprises for AAPL\ndata = earnings_surprises(fmp, \"AAPL\")\n\n\n\n\n\n","category":"function"},{"location":"stockstatistics/#analyst_estimates","page":"Stock Statistics","title":"analyst_estimates","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"analyst_estimates","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.analyst_estimates","page":"Stock Statistics","title":"FinancialModelingPrep.analyst_estimates","text":"analyst_estimates(fmp, symbol, params...)\n\nReturns a vector of analyst estimates for the specified symbol. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nsymbol::String: A stock symbol.\nparams...: Additional keyword query params.\n\nSee Analyst-Estimates for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the last 4 quarters of analyst estimates for AAPL\ndata = analyst_estimates(fmp, \"AAPL\", period = \"quarter\", limit = 4)\n\n\n\n\n\n","category":"function"},{"location":"stockstatistics/#mergers_and_acquisitions_feed","page":"Stock Statistics","title":"mergers_and_acquisitions_feed","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"mergers_and_acquisitions_feed","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.mergers_and_acquisitions_feed","page":"Stock Statistics","title":"FinancialModelingPrep.mergers_and_acquisitions_feed","text":"mergers_and_acquisitions_feed(fmp, params...)\n\nReturns a vector containing the mergers and acquisitions feed results. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Mergers-and-Acquisitions-RSS-Feed for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# get the first page of the mergers and acquisitions rss feed\ndata = mergers_and_acquisitions_feed(fmp, page = 0)\n\n\n\n\n\n","category":"function"},{"location":"stockstatistics/#mergers_and_acquisitions_search","page":"Stock Statistics","title":"mergers_and_acquisitions_search","text":"","category":"section"},{"location":"stockstatistics/","page":"Stock Statistics","title":"Stock Statistics","text":"mergers_and_acquisitions_search","category":"page"},{"location":"stockstatistics/#FinancialModelingPrep.mergers_and_acquisitions_search","page":"Stock Statistics","title":"FinancialModelingPrep.mergers_and_acquisitions_search","text":"mergers_and_acquisitions_search(fmp, params...)\n\nReturns a vector containing mergers and acquisitions search results. Each element is a dictionary.\n\nArguments\n\nfmp::FMP: A Financial Modeling Prep instance.\nparams...: Additional keyword query params.\n\nSee Mergers-and-Acquisitions for more details.\n\nExamples\n\n# create a FMP API instance\nfmp = FMP()\n\n# search for mergers and acquisitions\ndata = mergers_and_acquisitions_search(fmp, name = \"Syros\")\n\n\n\n\n\n","category":"function"}]
}
